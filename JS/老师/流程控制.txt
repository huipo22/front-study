                               流程控制
一、流程：就是代码书写的顺序（从上往下执行）文档流
    流程控制:通过 规定的语句 让 程序代码 有条件 的 按照一定的方
式执行
    var a=9;   1==0
    if(false){
        alert("偶数");
    }else{
        alert("奇数");
    }
二、流程控制的分类：
 1.顺序结构:
    正常代码书写的顺序。
 2.选择结构（分支结构，条件结构）
   根据 给定的条件 有选择的执行相应的语句（按上例来理解）.
   2.1 单路分支  if
   结构：
   //()里的内容可以是一个表达式，还可以是任何的数据类型,最终的结果时行隐式转换,转换为布尔值 true\false
   //{}它里的内容看作一个整体，只有一行代码时可以省略{}。
   if(条件){
       条件为真时执行的代码;
   }
   2.2 双路分支  if  else
   结构:
    if(条件){
       条件为真时执行的代码;
    }else{
       每件为假时执行的代码;
    } 
   2.3 多路分支  if     else if   else
   结构:
   if(条件1){
      条件为真时执行的代码;
   }else if(条件2){
      条件为真时执行的代码;
   }...{

   }else{
      上述条件都为假时执行的代码;
   }
   //判断成绩
    2.4 嵌套分支
    2.5 switch语句
    格式：
    switch(要判断的条件){
       case 条件1:表达式1（执行的代码);
       break;
       case 条件2:表达式2（执行的代码);
       break;
       ......
       default:上述条件不成立时执行的代码;
    }
****************************************************
   使用习惯：if用于判断某一段范围，switch用于判断单个值时
   条件满足的情况不可以重复，会发生不可预期的
错误
****************************************************



 3.循环结构
   在给定的条件满足的情况下，重复的执行同一段代码
   for    while   do while   for in
   1.for循环
   结构:
      for(变量=初始值;变量<最终值;变化值){
        重复的代码;
      }
   2.while循环
   结构:
       while(条件){
           条件满足时执行的代码;
       }
   3.do while
   结构：
      do{
        条件满足时执行的代码;
      }while(条件)
    do while的流程：先执行一次，再判断条件，如果条件成立，再执行条件满足时的代码

***********************************************
1.do while与while的区别
  do while先执行一次，再判断,如果条件满足时，再执行
  while先判断，如果条件满足时，再执行

2.for 与 while 的区别
  for    知道循环次数时使用
  while  知道结束条件时使用

javascript中最常用的  for   
************************************************
二、跳转语句   break  continue
   1.break   可以用于switch，也可以用于循环语句
     终止并跳出循环,接着执行后面的代码。
   2.continue  不能用于switch，可以用于循环
     终止并跳出当前循环，接着执行下一个满足条件的代码。
三、标签语句(可以跳出多层循环)
   结构：
       标签名:(相当于标记)
       if(){
          break 标签名;
       }

作业
    1.鸡兔同笼,头有34，脚有96,有多只鸡与兔?

    2.买书：教材10元/本，参考书5元/本，练习本0.5元/本，100元买了100本书，各种书各有几本?

    3.操场上有一百多个人，三排余一人，四排余二人，五排余三人,总共有多少人?

  
 
